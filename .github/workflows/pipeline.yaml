# AUTOR LORENZO
name: pipeline Django DevOps

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Primer job: compilación, pruebas, análisis y cobertura
  build-and-test:
    name: Build, Test, Lint & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Migrations
        run: python manage.py migrate
        env:
          DJANGO_DB_PATH: /tmp/db.sqlite3  # ruta temporal para CI

      - name: Run Unit Tests with Coverage
        run: |
          pip install coverage
          coverage run manage.py test
          coverage report -m

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: .coverage

      - name: Lint code
        run: |
          pip install flake8
          flake8 . || true  # no rompe el pipeline por errores de estilo

  # Segundo job: construir y subir la imagen Docker
  docker-build:
    name: Build, Push & Scan Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t devops-django .

      - name: Push Docker image
        run: |
          docker tag devops-django ${{ secrets.DOCKER_USERNAME }}/devops-django:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/devops-django:latest

      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/devops-django:latest

  # Tercer job: desplegar en Kubernetes con Kind (cluster temporal)
  deploy-k8s:
    name: Deploy to Kubernetes (Kind)
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kind cluster
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: devops-cluster

      - name: Verify cluster
        run: kubectl get nodes

      - name: Deploy Django app to Kubernetes
        run: |
          echo "Desplegando la aplicación en el cluster Kind..."
          kubectl create deployment devops-django \
            --image=${{ secrets.DOCKER_USERNAME }}/devops-django:latest \
            --replicas=2 --dry-run=client -o yaml | kubectl apply -f -

          kubectl expose deployment devops-django \
            --type=NodePort --port=8000 --target-port=8000 \
            --dry-run=client -o yaml | kubectl apply -f -

          echo "Despliegue creado correctamente. Mostrando recursos:"
          kubectl get all -o wide

      - name: Wait for Pods
        run: |
          echo "Esperando que los Pods estén listos..."
          kubectl wait --for=condition=Ready pod -l app=devops-django --timeout=120s
          kubectl get pods -o wide
